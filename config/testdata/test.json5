{
  consul: "consul:8500",
  stopTimeout: 5,
  jobs: [
    {
      // although these are all jobs, we're naming these jobs "services",
      // "coprocess", "task", "prestart", etc. to make their role clear
      name: "serviceA",
      port: 8080,
      interfaces: "inet",
      exec: "/bin/serviceA",
      when: {
        source: "preStart",
        event: "exitSuccess"
      },
      health: {
        exec: "/bin/to/healthcheck/for/service/A.sh",
        interval: 19,
        ttl: 30,
      },
      tags: ["tag1","tag2"]
    },
    {
      name: "serviceB",
      port: 5000,
      interfaces: ["ethwe","eth0", "inet"],
      exec: ["/bin/serviceB", "B"],
      health:{
        exec: ["/bin/to/healthcheck/for/service/B.sh", "B"],
        timeout: "2s",
        interval: 20,
        ttl: "103"
      }
    },
    {
      name: "coprocessC",
      exec: "/bin/coprocessC",
      restarts: "unlimited"
    },
    {
      name: "periodicTaskD",
      exec: "/bin/taskD",
      when: {
        interval: "1s"
      }
    },
    {
      name: "preStart",
      exec: "/bin/to/preStart.sh arg1 arg2"
    },
    {
      name: "preStop",
      exec: ["/bin/to/preStop.sh","arg1","arg2"],
      when: {
        source: "serviceA",
        event: "stopping"
      }
    },
    {
      name: "postStop",
      exec: ["/bin/to/postStop.sh"],
      when: {
        source: "serviceA",
        event: "stopped"
      }
    },
    {
      name: "onChange-upstreamA",
      exec: ["/bin/onChangeA.sh"],
      when: {
        source: "watch.upstreamA",
        event: "changed"
      }
    },
    {
      name: "onChange-upstreamB",
      exec: ["/bin/onChangeB.sh"],
      when: {
        source: "watch.upstreamB",
        event: "healthy"
      }
    }
  ],
  watches: [
    {
      name: "upstreamA",
      interval: 11,
      tag: "dev"
    },
    {
      name: "upstreamB",
      interval: 79
    }
  ],
  telemetry: {
    port: 9000,
    interfaces: ["inet"],
    tags: ["dev"],
    sensors: [
      {
        namespace: "org",
        subsystem: "app",
        name: "zed",
        help: "gauge of zeds in org app",
        type: "gauge",
        interval: 10,
        exec: "/bin/sensorZ",
        timeout: "5s"
      }
    ]
  }
}
